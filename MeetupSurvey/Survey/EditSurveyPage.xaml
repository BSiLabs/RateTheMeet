<?xml version="1.0" encoding="UTF-8"?>
<ContentPage BackgroundColor="{StaticResource LightGray60}" 
             xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             x:Class="MeetupSurvey.Survey.EditSurveyPage" 
             xmlns:behaviors="clr-namespace:MeetupSurvey.Behaviors" 
             xmlns:local="clr-namespace:MeetupSurvey.Infrastructure" 
             xmlns:controls="clr-namespace:MeetupSurvey.Controls"
             x:Name="page"
             NavigationPage.HasNavigationBar="false"
             xmlns:xamanimation="clr-namespace:Xamanimation;assembly=Xamanimation"
             xmlns:icons="clr-namespace:MeetupSurvey.Theming"
             xmlns:android="clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core"
             Visual="Default">
    
    <ContentPage.Resources>
        <behaviors:SelectedItemEventArgsToSelectedItemConverter x:Key="SelectedItemConverter" />
        <local:InverseBoolValueConverter x:Key="Not" /> 
         <local:BoolToOpacityConverter x:Key="BoolToOpacityConverter" /> 
        
        <xamanimation:FadeToAnimation Easing="CubicOut" Opacity="1"
                                      x:Key="buttonFadeInAnimation"
                                      Duration="600"
                                      Target="{x:Reference newQuestionButton}" />
        
        <xamanimation:FadeToAnimation Easing="CubicIn" Opacity="0"
                                      x:Key="buttonFadeOutAnimation"
                                      Duration="200"
                                      Target="{x:Reference newQuestionButton}" />
        
        <xamanimation:FadeToAnimation Easing="CubicOut" Opacity="1"
                                      x:Key="publishButtonFadeInAnimation"
                                      Duration="600"
                                      Target="{x:Reference publishButton}" />
        
        <xamanimation:FadeToAnimation Easing="CubicIn" Opacity="0"
                                      x:Key="publishButtonFadeOutAnimation"
                                      Duration="200"
                                      Target="{x:Reference publishButton}" />
        
        <xamanimation:FadeInAnimation Easing="CubicOut" 
                                      x:Key="stackLayoutFadeInAnimation"
                                      Duration="600"
                                      Target="{x:Reference stackLayout}" />
        
        <xamanimation:FadeInAnimation Easing="CubicOut" 
                                      x:Key="titleHeaderFadeInAnimation"
                                      Duration="400"
                                      Target="{x:Reference titleHeader}" />
        
        <xamanimation:FadeInAnimation Easing="CubicOut" 
                                      x:Key="layoutFadeInAnimation"
                                      Direction="Down"
                                      Duration="450"
                                      Target="{x:Reference layout}" />
        
       <xamanimation:FadeOutAnimation Easing="CubicIn" 
                                      x:Key="loadingFadeOutAnimation"
                                      Direction="Down"
                                      Duration="450"
                                      Target="{x:Reference loading}" />
        <xamanimation:FadeInAnimation Easing="CubicOut"
                                      x:Key="groupLabelFadeInAnimation"
                                      Direction="Down"
                                      Duration="600"
                                      Target="{x:Reference groupLabel}" />
        
        <xamanimation:FadeInAnimation Easing="CubicOut"
                                      x:Key="pageLabelFadeInAnimation"
                                      Direction="Down"
                                      Duration="600"
                                      Target="{x:Reference pageLabel}" />
        <xamanimation:FadeInAnimation Easing="CubicOut"
                                      x:Key="prizeButtonFadeInAnimation"
                                      Direction="Up"
                                      Duration="600"
                                      Target="{x:Reference prizeButton}" />
        
        <xamanimation:ScaleToAnimation Easing="CubicOut"
                                       x:Key="editButtonScaleUpAnimation"
                                        Duration="200"
                                        Scale="1.3"
                                       Target="{x:Reference EditButton}"/>
        <xamanimation:ScaleToAnimation Easing="CubicOut"
                                       x:Key="editButtonScaleDownAnimation"
                                        Duration="200"
                                        Scale="1"
                                       Target="{x:Reference EditButton}"/>
        
        
        
    </ContentPage.Resources>
    <ContentPage.Content>
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
   <Grid x:Name="layout" Padding="0" Margin="0" Grid.Row="0" Opacity="0" VerticalOptions="Start" HorizontalOptions="FillAndExpand" BackgroundColor="{StaticResource Blue}" HeightRequest="60">
        <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                
                <Image x:Name="bgImage" Source="{Binding BackgroundImage}" Opacity=".2" Grid.ColumnSpan="4" Aspect="AspectFill" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand"/>
                
                <ActivityIndicator IsRunning="true" x:Name="loading" Color="White" VerticalOptions="Center" HorizontalOptions="EndAndExpand" Grid.ColumnSpan="4" Visual="Material" Margin="0,0,0,0"/>
                
                <Button Margin="-20,0,0,0" Text="{x:Static icons:IconFont.AngleLeft}" Style="{StaticResource BackButton}" Command="{Binding GoBack}" />
                
                <Label x:Name="groupLabel" Grid.Column="1" Text="{Binding GroupName}" LineBreakMode="TailTruncation" MaxLines="1" TextColor="White" FontSize="Micro" VerticalOptions="Center" Margin="-5,-30,0,0" Opacity="0" />
                <Label x:Name="pageLabel" Grid.Column="1" Text="{Binding PageName}" Style="{StaticResource Header}"  LineBreakMode="TailTruncation" MaxLines="1" VerticalOptions="Center" Margin="-5,5,0,0" Opacity="0" />
                    
                <Button Grid.Column="2" x:Name="EditButton" Style="{StaticResource ToolBarButton}" Margin="0,0,-5,0"
                        Text="{x:Static icons:IconFont.Edit}"  Command="{Binding EditSurvey}" Opacity="{Binding IsLoading, Converter={StaticResource BoolToOpacityConverter},ConverterParameter=invert}"
                        IsVisible="{Binding IsEditing, Converter={StaticResource Not}}" IsEnabled="{Binding IsLoading, Converter={StaticResource Not}}"/>    
                
                <Button Grid.Column="2" x:Name="SaveButton" Style="{StaticResource ToolBarButton}" Margin="0,0,-5,0"
                        Text="{x:Static icons:IconFont.Save}" Command="{Binding SaveSurvey}" Opacity="{Binding IsLoading, Converter={StaticResource BoolToOpacityConverter},ConverterParameter=invert}"
                         IsVisible="{Binding IsEditing}" IsEnabled="{Binding IsLoading, Converter={StaticResource Not}}"/>
                
                <Button Grid.Column="3" x:Name="ellipsis" Text="{x:Static icons:IconFont.EllipsisV}" Margin="0,0,-20,0"
                        Command="{Binding More}" Style="{StaticResource EllipsisButton}" Opacity="{Binding IsLoading, Converter={StaticResource BoolToOpacityConverter},ConverterParameter=invert}"/>
   </Grid>
            
                    <Frame  x:Name="titleHeader" Grid.Row="1" Margin="15,-50,15,0" Opacity="0" HasShadow="false" BackgroundColor="White" CornerRadius="5"  Padding="10,20">
                        <StackLayout>
                            <Label Text="{Binding Localize[SurveyName]}" TextColor="{StaticResource Primary}"/> 
                            <Entry IsEnabled="{Binding IsEditing}" Keyboard="Chat"
                                    IsReadOnly="{Binding IsEditing, Converter={StaticResource Not}}" Text="{Binding Survey.Name}" Margin="0,8,0,8" Placeholder="{Binding Localize[SurveyName]}"/>                    
                    <!-- Playing around with new UI for this button -->
                    <!--<Label Text="Prizes" TextColor="{StaticResource Primary}"/> 
                    <StackLayout Orientation="Horizontal" IsVisible="{Binding CanAddPrizes}" Opacity="0" x:Name="prizeButton" HorizontalOptions="End" >
                                <Button HorizontalOptions="Center"
                                        BackgroundColor="Transparent"
                                        Text="View Prizes" 
                                        TextColor="{StaticResource Primary}"
                                        FontAttributes="Bold"
                                        Command="{Binding NavigateToEditPrize}"
                                        Padding="50,0,15,0"
                                        Visual="Default" />
                                <Label VerticalOptions="Center" Text="{x:Static icons:IconFont.Award}" 
                                       android:VisualElement.Elevation="10"
                                       FontFamily="{DynamicResource FontAwesome}"
                                       FontSize="25"
                                       HorizontalOptions="Start"
                                       HorizontalTextAlignment="Center"
                                       WidthRequest="60"
                                       TextColor="{StaticResource Primary}"
                                       InputTransparent="true"/>
                
                            </StackLayout>-->
                    
                        <Button x:Name="prizeButton" Text="{Binding PrizeButtonText}" FontAttributes="Bold" Style="{StaticResource BlueButton}" Command="{Binding NavigateToEditPrize}" Opacity="0" IsVisible="{Binding CanAddPrizes}"/>
                        </StackLayout>
                    </Frame>
            
                <ScrollView x:Name="scrollQuestions" Grid.Row="2" Margin="0" Padding="0,0,0,30">
                    <ScrollView.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding Source={x:Reference page}, Path=BindingContext.ItemSelected}"/>
                    </ScrollView.GestureRecognizers>
                    <StackLayout x:Name="stackLayout" BindableLayout.ItemsSource="{Binding Survey.QuestionList}" VerticalOptions="FillAndExpand" Opacity="0">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="15,4" >
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Source={x:Reference page}, Path=BindingContext.ItemSelected}" CommandParameter="{Binding}" />
                                    </Grid.GestureRecognizers>
                                    <Frame CornerRadius="5" HasShadow="false" Padding="0">
                                        <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <!--<RowDefinition Height="auto"/>-->
                                            </Grid.RowDefinitions>
                                            <Editor IsEnabled="{Binding Source={x:Reference page}, Path=BindingContext.IsEditing}"
                                                    IsReadOnly="{Binding Source={x:Reference page}, Path=BindingContext.IsEditing, Converter={StaticResource Not}}" 
                                                    Margin="30,10,15,10" Text="{Binding Name}" Placeholder="{Binding Localize[Question]}" BackgroundColor="White"
                                                    android:VisualElement.Elevation="0" VerticalOptions="CenterAndExpand" AutoSize="TextChanges" 
                                                    SizeChanged="Entry_Loaded" Unfocused="Handle_Unfocused" Focused="Handle_Focused"/>
                                            <Label Text="{Binding Order}" FontSize="Medium" TextColor="{StaticResource Secondary}" HeightRequest="120" VerticalTextAlignment="Center"
                                                   FontAttributes="Bold" Margin="10,0,0,0" HorizontalOptions="Start" VerticalOptions="Center" InputTransparent="true" />
                                            <Button Text="{x:Static icons:IconFont.Trash}" FontFamily="{DynamicResource FontAwesome}" BackgroundColor="Transparent"
                                                    Style="{StaticResource ToolBarButton}"
                                                    IsVisible="{Binding IsSelected}"
                                                    FontSize="15" VerticalOptions="Start" HorizontalOptions="End"  
                                                    TextColor="{StaticResource Primary}" android:VisualElement.Elevation="10" Command="{Binding Source={x:Reference page}, Path=BindingContext.DeleteQuestion}" CommandParameter="{Binding}" />
                                        <Button FontSize="14"
                                                Grid.Row="0"
                                                Padding="30,0,0,0"
                                                Margin="0,2,10,0"
                                                TextColor="{StaticResource Primary}"
                                                BackgroundColor="Transparent"
                                                Text="{Binding Localize[CopyAPreviousQuestion]}"
                                                IsVisible="{Binding IsSelected}"
                                                Command="{Binding Source={x:Reference page}, Path=BindingContext.PreviousQuestionPopup}" CommandParameter="{Binding}"
                                                VerticalOptions="Start"
                                                HorizontalOptions="Start"
                                                ContentLayout="Left,20"
                                                Visual="Default">
                                        </Button>

                                            <Label android:VisualElement.Elevation="10" Margin="10,15,0,0"
                                                   IsVisible="{Binding IsSelected}"
                        VerticalOptions="Start" 
                        Text="{x:Static icons:IconFont.Bookmark}" 
                        FontFamily="{DynamicResource FontAwesome}"
                        FontSize="16"
                        HorizontalOptions="Start"
                        HorizontalTextAlignment="Center"
                        TextColor="{StaticResource Primary}"   
                        InputTransparent="true"/>
                                                
                                        </Grid>
                                    </Frame>
                                </Grid>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </StackLayout>
                 </ScrollView>
            <controls:FloatingFrameRound x:Name="newQuestionButton" Grid.RowSpan="3"  CornerRadius="23" Margin="20,30" HorizontalOptions="End" 
                   VerticalOptions="End" Padding="0" HasShadow="true" Opacity="0" InputTransparent="{Binding IsEditing, Converter={StaticResource Not}}">
                <Grid>
                <Button Visual="Material" Text="{Binding Localize[NewQuestion]}" Style="{StaticResource BlueButton}" FontAttributes="Bold" ContentLayout="Left,20"
                        Command="{Binding AddQuestion}" Padding="40,0,10,0"  Margin="0" Clicked="NewQuestion_Clicked" InputTransparent="{Binding IsEditing, Converter={StaticResource Not}}"/>
                 <Label android:VisualElement.Elevation="10" 
                        VerticalOptions="Center" 
                        Text="{x:Static icons:IconFont.Plus}" 
                        FontFamily="{DynamicResource FontAwesome}"
                        FontSize="25"
                        HorizontalOptions="Start"
                        HorizontalTextAlignment="Center"
                        WidthRequest="60"
                        TextColor="White"   
                        InputTransparent="true"/>
                   </Grid>
            </controls:FloatingFrameRound>
            
            <controls:FloatingFrameRound x:Name="publishButton" Grid.RowSpan="3"  CornerRadius="23" Margin="20,30" HorizontalOptions="End" 
                   VerticalOptions="End" Padding="0" HasShadow="true" Opacity="0" InputTransparent="{Binding IsEditing}">
                
            <Grid>
              <Button Visual="Material" Text="{Binding Localize[Publish]}" Style="{StaticResource BlueButton}" FontAttributes="Bold" BackgroundColor="#B535FF"
                        Command="{Binding Publish}" Padding="48,0,10,0"  Margin="0" InputTransparent="{Binding IsEditing}" ContentLayout="Left,20"/>

                <Label android:VisualElement.Elevation="10" 
                       Visual="Material" 
                       VerticalOptions="Center" 
                       Text="{x:Static icons:IconFont.Rocket}" 
                       FontFamily="{DynamicResource FontAwesome}"
                       FontSize="25"
                       HorizontalOptions="Start"
                       HorizontalTextAlignment="Center" 
                       WidthRequest="70"
                       TextColor="White"
                       InputTransparent="true"/>
            </Grid>
            </controls:FloatingFrameRound>
        </Grid>
    </ContentPage.Content>
</ContentPage>
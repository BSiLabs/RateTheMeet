@page "/surveyresult"
@inject IJSRuntime JsRuntime;

<div class="row">
    <a href="current" class="mt-3 ml-4 pr-3"><i class="far fa-angle-left mt-1"/></a><h1 class="mt-3">Survey Name</h1>
</div>

<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">

    <ol class="carousel-indicators align-bottom">
        <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
        <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner">
        <div class="carousel-item active">
            <div class="graph bg-blue rounded">
                @*<SimpleButton onclick="@HandleRedraw">Redraw</SimpleButton>

                <LineChart ref="lineChart" TItem="double" />*@


                <div class="text-center align-bottom">
                    <a href="/prizepage" class="text-white mt-4"><i class="far fa-award text-white"></i>View Prizes</a>
                </div>
               
            </div>
            <div class="bg-white mt-3">
                <h3>Comments</h3>
                <ul class="comments">
                    <li>
                        This is great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        Loved it!
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        I really like the setup but more variety of presenters would be great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        This is great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        Loved it!
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        I really like the setup but more variety of presenters would be great
                        <div class="dropdown-divider"></div>
                    </li>
                </ul>
            </div>
        </div>

        <div class="carousel-item">
            <div class="graph bg-blue rounded">
            </div>
            <div class="bg-white mt-3">
                <h3>Comments</h3>
                <ul class="comments">
                    <li>
                        This is great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>skvndslvbskv</li>
                    <li>
                        more variety of presenters would be great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        This is great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        Loved it!
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        daklcvnskjbv kjvbjsdkvbjkv
                        <div class="dropdown-divider"></div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="carousel-item">
            <div class="graph bg-blue rounded">
            </div>
            <div class="bg-white mt-3">
                <h3>Comments</h3>
                <ul class="comments">
                    <li>
                        This is great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        Loved it!
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        I really like the setup but more variety of presenters would be great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        This is great
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        Loved it!
                        <div class="dropdown-divider"></div>
                    </li>
                    <li>
                        I really like the setup but more variety of presenters would be great
                        <div class="dropdown-divider"></div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <a id="carouselExampleIndicators-prev"
       class="carousel-control-prev" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a id="carouselExampleIndicators-next"
       class="carousel-control-next" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>


@code {
    int currentCount = 0;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await HandleRedraw();
        if (firstRender)
        {
            await JsRuntime.InvokeAsync<object>("initializeCarousel");
            firstRender = false;
        }
    }

    LineChart<double> lineChart;

    async Task HandleRedraw()
    {
        lineChart.Clear();

        lineChart.AddLabel(Labels);

        lineChart.AddDataSet(GetLineChartDataset());

        await lineChart.Update();
    }

    LineChartDataset<double> GetLineChartDataset()
    {
        return new LineChartDataset<double>
        {
            Label = "# of randoms",
            Data = RandomizeData(),
            BackgroundColor = backgroundColors,
            BorderColor = borderColors,
            Fill = true,
            PointRadius = 2,
            BorderDash = new List<int> { }
        };
    }

    string[] Labels = { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" };
    List<string> backgroundColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
    List<string> borderColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };

    List<double> RandomizeData()
    {
        var r = new Random(DateTime.Now.Millisecond);

        return new List<double> { r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble() };
    }

}